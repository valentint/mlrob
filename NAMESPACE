exportPattern("^[[:alpha:]]+")
##  useDynLib(mlrob)

  importFrom("methods", "is", "slotNames")
  importFrom("stats", "cov", "mad", "mahalanobis", "prcomp", "qchisq",
             "runif", "sd", "var")
  importFrom("utils", "data")

importFrom(pracma, pinv)
importFrom(stats, predict)
importFrom(MASS, lda)
importFrom(geigen, geigen)
importFrom(sparseLDA, sda, normalize, normalizetest, predict.sda)
importFrom(pamr, pamr.train, pamr.predict)
importFrom(rda, rda, rda.cv, predict.rda)
importFrom(rrcov, LdaClassic, Linda, QdaClassic, QdaCov, predict, mtxconfusion)
importFrom(rrcovHD, SosDiscRobust)
importFrom(robustbase, rankMM)
importFrom(ggplot2, geom_point, ggplot, aes, labs, xlab, ylab, aes_string)

importMethodsFrom(rrcov, predict)

S3method(predict, LdaSparse)
S3method(predict, LdaPca)
S3method(predict, LdaFisher)
S3method(predict, LdaRotatedCS)
S3method(predict, LdaPenalizedCS)
S3method(predict, LdaPenalizedCSV2)
S3method(predict, LdaNSC)
S3method(predict, LdaRegularized)

S3method(plot, LdaSparse)
S3method(plot, LdaPca)
S3method(plot, LdaFisher)
##S3method(plot, LdaRotatedCS)
##S3method(plot, LdaPenalizedCS)

S3method(print, LdaRegularized)
S3method(print, LdaNSC)
S3method(print, LdaSparse)
S3method(print, LdaPca)
S3method(print, LdaFisher)
S3method(print, LdaRotatedCS)
S3method(print, LdaPenalizedCS)
S3method(print, LdaPenalizedCSV2)
